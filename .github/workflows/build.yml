name: Build then release

on:
  push:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            runner: macos-latest
            build_env: {}
          - target: aarch64-apple-darwin
            runner: macos-latest
            build_env: {}
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-latest
            build_env: {}
          - target: aarch64-unknown-linux-musl
            runner: ubuntu-latest
            build_env:
              CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS: "-Clink-self-contained=yes -Clinker=rust-lld"
              CC_aarch64_unknown_linux_musl: clang
              AR_aarch64_unknown_linux_musl: llvm-ar

    steps:
      - uses: actions/checkout@v4

      - name: Install musl-tools
        if: matrix.runner == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y musl-tools

      - name: Install cross build deps for aarch64-unknown-linux-musl
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: sudo apt update && sudo apt install -y clang llvm gcc-aarch64-linux-gnu

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Setup rust toolchain
        run: rustup show

      - name: Build
        env: ${{ matrix.build_env }}
        run: |
          cargo build --release --target ${{ matrix.target }}
